{"ast":null,"code":"const handleSearch = async query => {\n  try {\n    const response = await fetch(\"http://localhost:5000/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n\n    // Ensure results is always an array\n    setResults(Array.isArray(data.results) ? data.results : []);\n  } catch (error) {\n    console.error(\"Error fetching search results:\", error);\n    setResults([]); // Set empty array on error\n  }\n};","map":{"version":3,"names":["handleSearch","query","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","setResults","Array","isArray","results","error","console"],"sources":["D:/Project/self-improving-ai-agent/frontend/src/App.js"],"sourcesContent":["const handleSearch = async (query) => {\r\n    try {\r\n        const response = await fetch(\"http://localhost:5000/search\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ query }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        // Ensure results is always an array\r\n        setResults(Array.isArray(data.results) ? data.results : []);\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching search results:\", error);\r\n        setResults([]); // Set empty array on error\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAM,CAAC;IAClC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC7D;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;IAElC;IACAC,UAAU,CAACC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACK,OAAO,CAAC,GAAGL,IAAI,CAACK,OAAO,GAAG,EAAE,CAAC;EAE/D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtDJ,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}